% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mist.R
\name{mist}
\alias{mist}
\title{mist}
\usage{
mist(y, X, G, Z, method = "liu", model = c("guess", "continuous",
  "binary"), weight.beta = NULL, maf = NULL)
}
\arguments{
\item{y}{[\link{numeric}] A \code{numeric} vector of the continuous outcome variables. Missing values are not allowed.}

\item{X}{[\link{numeric}] A \code{numeric} matrix of covariates with rows for individuals and columns for covariates.
If there is no covariate, it does not need to be specified}

\item{G}{[\link{numeric}] A \code{numeric} genotype matrix with rows for individuals and columns for SNPs.
Each SNP should be coded as 0, 1, and 2 for AA, Aa, aa, where A is a major allele and a is a minor allele.
Missing genotypes are not allowed.}

\item{Z}{[\link{numeric}] a \code{numeric} matrix of second level covariates for variant characteristics.
Each row corresponds to a variant and each column corresponds to a variant characteristic.
If there is no second level covariates, a vector of 1 should be used.}

\item{method}{[\link{character}] A method to compute the p-value and the default value is "liu".
Method "davies" represents an exact method that computes the p-value
by inverting the characteristic function of the mixture chisq.
Method "liu" represents an approximation method that matches the first 3 moments.}

\item{model}{[\link{character}] A \code{character} vector specifying the model. Default is to \code{"guess"}.
Possible choices are \code{"guess"}, \code{"continuous"} (linear regression) or \code{"binary"} (logistic regression).}

\item{weight.beta}{[\link{numeric}] A \code{numeric} vector of parameters of beta function
which is the weight for scorestatistics.
The default value is \code{NULL}, \emph{i.e.} no weight.
Default weight value could be \code{c(1, 25)}.}

\item{maf}{[\link{numeric}] A \code{numeric} vector of MAF (minor allele frequency) for each SNP.}
}
\value{
\itemize{
\item S.tau score Statistic for the variant heterogeneous effect.
\item S.pi score Statistic for the variant mean effect.
\item p.value.S.tau P-value for testing the variant heterogeneous effect.
\item p.value.S.pi P-value for testing the variant mean effect.
\item p.value.overall Overall p-value for testing the association between the set of SNPS/genes and outcomes.
It combines p.value.S.pi and p.value.S.tau by using Fisher's procedure.
}
}
\description{
Test for association between a set of SNPS/genes and continuous outcomes by
including variant characteristic information and using score statistics.
}
\examples{

sample_size <- 100
data <- data.frame(
  y_continuous = c(rnorm(sample_size / 2, 10, 2), rnorm(sample_size / 2, 10, 2)),
  y_binary = rep(c(0, 1), each = sample_size / 2),
  x_cov1 = runif(sample_size),
  x_cov2 = rnorm(sample_size, 25, 5),
  g_variant1 = c(rbinom(sample_size / 2, 2, prob = 0.01), rbinom(sample_size / 2, 2, prob = 0.05)),
  g_variant2 = c(rbinom(sample_size / 2, 2, prob = 0.01), rbinom(sample_size / 2, 2, prob = 0.05)),
  g_variant3 = c(rbinom(sample_size / 2, 2, prob = 0.01), rbinom(sample_size / 2, 2, prob = 0.05)),
  g_variant4 = c(rbinom(sample_size / 2, 2, prob = 0.01), rbinom(sample_size / 2, 2, prob = 0.05))
)
z_1 <- matrix(
  data = 1,
  nrow = length(paste0("g_variant", 1:4)),
  ncol = 1,
  dimnames = list(paste0("g_variant", 1:4), "cluster")
)
z_2 <- matrix(
  c(1, 1, 0, 0, 0, 0, 1, 1),
  nrow = length(paste0("g_variant", 1:4)),
  ncol = 2,
  dimnames = list(paste0("g_variant", 1:4), paste0("cluster", 1:2))
)


## One cluster

mist(
  y = data[, "y_continuous"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_1,
  method = "liu",
  model = "continuous"
)

mist(
  y = data[, "y_binary"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_1,
  method = "liu",
  model = "binary"
)


## Two clusters

mist(
  y = data[, "y_continuous"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_2,
  method = "liu",
  model = "continuous"
)

mist(
  y = data[, "y_binary"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_2,
  method = "liu",
  model = "binary"
)


## Weighted

maf <- colSums(as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE])) / (nrow(data) * 2)

mist(
  y = data[, "y_continuous"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_1,
  method = "liu",
  model = "continuous",
  weight.beta = c(1,25),
  maf = maf
)

mist(
  y = data[, "y_binary"],
  X = as.matrix(data[, paste0("x_cov", 1:2), drop = FALSE]),
  G = as.matrix(data[, paste0("g_variant", 1:4), drop = FALSE]),
  Z = z_1,
  method = "liu",
  model = "binary",
  weight.beta = c(1,25),
  maf = maf
)

}
